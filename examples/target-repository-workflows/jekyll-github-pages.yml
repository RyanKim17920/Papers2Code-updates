# Jekyll + GitHub Pages Example
#
# Place this file in your target repository at:
# .github/workflows/content-update.yml
#
# This workflow:
# 1. Receives content updates from Papers2Code-updates
# 2. Syncs markdown files to your Jekyll site
# 3. Builds the Jekyll site
# 4. Deploys to GitHub Pages

name: Update Jekyll Site

on:
  repository_dispatch:
    types: [content-update]
  
  # Also allow manual triggering for testing
  workflow_dispatch:

# Required for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Jekyll site
        uses: actions/checkout@v4
      
      - name: Fetch content from Papers2Code-updates
        if: github.event_name == 'repository_dispatch'
        env:
          SOURCE_REPO: ${{ github.event.client_payload.repository }}
          SOURCE_SHA: ${{ github.event.client_payload.sha }}
        run: |
          echo "ðŸ“¥ Fetching content from $SOURCE_REPO at commit $SOURCE_SHA"
          
          # Clone the source repository
          git clone https://github.com/$SOURCE_REPO.git source-content
          cd source-content
          git checkout $SOURCE_SHA
          
          # Sync posts to Jekyll _posts directory
          echo "Syncing posts to Jekyll _posts directory..."
          mkdir -p ../_posts
          cp -r _posts/* ../_posts/
          
          # List synced files
          echo "Synced files:"
          ls -la ../_posts/
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true # runs 'bundle install' and caches installed gems
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Summary
        run: |
          echo "### Jekyll Site Updated and Deployed âœ…" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            echo "**Source Repository:** ${{ github.event.client_payload.repository }}" >> $GITHUB_STEP_SUMMARY
            echo "**Commit SHA:** ${{ github.event.client_payload.sha }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "**Deployment URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
